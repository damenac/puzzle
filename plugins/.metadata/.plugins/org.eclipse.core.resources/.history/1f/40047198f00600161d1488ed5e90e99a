package fr.inria.diverse.puzzle.metrics.auxiliarMetrics;

import org.eclipse.emf.ecore.EClass;

/**
 * Metric that measures the degree of cohesion between two meta-classes
 * The level of cohesion is defined by the function coh(x,y)
 *             0                                                                                     if (x.refs + y.refs) = 0
 * coh(x,y) =  (|{r|r in x.refs | r.type = y}| + |{r|r in y.refs | r.type = x}|)/(x.refs + y.refs)   otherwise
 * 
 * @author dmendeza
 *
 */
public class PairwiseCohesion {

	/**
	 * Computes the level of cohesion between two classes in the parameter. 
	 * The level of cohesion is defined by the function coh(x,y)
     *             0                                                                                     if (x.refs + y.refs) = 0
     * coh(x,y) =  (|{r|r in x.refs | r.type = y}| + |{r|r in y.refs | r.type = x}|)/(x.refs + y.refs)   otherwise
	 * @param x
	 * @param y
	 * @return
	 */
	public static double computePairwiseCohesion(EClass x, EClass y){
		int refsFromXToY = computeCrossReferences(x, y);
		int refsFromYtoX = computeCrossReferences(y, x);
		
		if(x.getEReferences().size() + y.getEReferences().size() == 0)
			return 0;
		else{
			double result = 0;
			
			return result;
		}
		
		
		return 0;
	}
	

	/**
	 * Return the amount of references that go from the class 'from' to the class 'to'
	 * @param from
	 * @param to
	 * @return
	 */
	public static int computeCrossReferences(EClass from, EClass to){
		
		return 0;
	}
}
