package logo

import fr.inria.diverse.k3.al.annotationprocessor.Aspect

import java.util.Hashtable

import static extension logo.LiteralAspect.*
import static extension logo.ArithmeticExpressionAspect.*
import static extension logo.RelationalExpressionAspect.*
import static extension logo.VarReferenceAspect.*
import Logo.Expression
import Logo.Literal
import com.sun.javafx.fxml.expression.BinaryExpression
import Logo.BinaryExpr

@Aspect(className=Expression)
public class ExpressionAspect {

	def Object eval(Hashtable<String, Object> context) {
		if(_self instanceof Literal)
			return (_self as Literal).eval(context)
		else if(_self instanceof BinaryExpr)
			return (_self as BinaryExpr).eval(context)
		else 
			return 0 
	}
}