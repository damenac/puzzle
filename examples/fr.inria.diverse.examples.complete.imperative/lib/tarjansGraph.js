var G = new jsnx.DiGraph();
G.addNodesFrom(["Trigger: [FSM]"], {group:0});
G.addNodesFrom(["Statement: [FSM]"], {group:1});
G.addNodesFrom(["Constraint: [FSM, Flowchart]"], {group:2});
G.addNodesFrom(["NamedElement: [FSM]"], {group:3});
G.addNodesFrom(["Transition: [FSM]","AbstractState: [FSM]"], {group:4});
G.addNodesFrom(["StateMachine: [FSM]"], {group:5});
G.addNodesFrom(["Program: [FSM]"], {group:6});
G.addNodesFrom(["State: [FSM]"], {group:7});
G.addNodesFrom(["PseudostateKind: [FSM]"], {group:8});
G.addNodesFrom(["Pseudostate: [FSM]"], {group:9});
G.addNodesFrom(["FinalState: [FSM]"], {group:10});
G.addNodesFrom(["Expression: [FSM, Logo, Flowchart]"], {group:11});
G.addNodesFrom(["Conditional: [FSM]"], {group:12});
G.addNodesFrom(["Loop: [FSM]"], {group:13});
G.addNodesFrom(["VarDecl: [FSM]"], {group:14});
G.addNodesFrom(["ConsoleOutput: [FSM]"], {group:15});
G.addNodesFrom(["Println: [FSM]"], {group:16});
G.addNodesFrom(["Print: [FSM]"], {group:17});
G.addNodesFrom(["Assignation: [FSM]"], {group:18});
G.addNodesFrom(["Wait: [FSM]"], {group:19});
G.addNodesFrom(["RelationalConstraint: [FSM, Flowchart]"], {group:20});
G.addNodesFrom(["VarReference: [FSM, Flowchart]"], {group:21});
G.addNodesFrom(["Literal: [FSM, Logo, Flowchart]"], {group:22});
G.addNodesFrom(["IntegerLit: [FSM, Logo, Flowchart]"], {group:23});
G.addNodesFrom(["StringLit: [FSM, Logo, Flowchart]"], {group:24});
G.addNodesFrom(["BoolLit: [FSM, Logo, Flowchart]"], {group:25});
G.addNodesFrom(["ArithmeticOperator: [FSM, Logo, Flowchart]"], {group:26});
G.addNodesFrom(["ArithmeticExpression: [FSM, Logo, Flowchart]"], {group:27});
G.addNodesFrom(["RelationalOperator: [FSM, Logo, Flowchart]"], {group:28});
G.addNodesFrom(["RelationalExpression: [FSM, Logo, Flowchart]"], {group:29});
G.addNodesFrom(["Instruction: [Logo]"], {group:30});
G.addNodesFrom(["LogoProgram: [Logo]"], {group:31});
G.addNodesFrom(["Primitive: [Logo]"], {group:32});
G.addNodesFrom(["Back: [Logo]"], {group:33});
G.addNodesFrom(["Forward: [Logo]"], {group:34});
G.addNodesFrom(["Left: [Logo]"], {group:35});
G.addNodesFrom(["Right: [Logo]"], {group:36});
G.addNodesFrom(["PenDown: [Logo]"], {group:37});
G.addNodesFrom(["PenUp: [Logo]"], {group:38});
G.addNodesFrom(["Clear: [Logo]"], {group:39});
G.addNodesFrom(["Parameter: [Logo]"], {group:40});
G.addNodesFrom(["ProcDeclaration: [Logo]","ProcCall: [Logo]"], {group:41});
G.addNodesFrom(["Block: [Logo]"], {group:42});
G.addNodesFrom(["ControlStructure: [Logo]"], {group:43});
G.addNodesFrom(["If: [Logo]"], {group:44});
G.addNodesFrom(["Repeat: [Logo]"], {group:45});
G.addNodesFrom(["While: [Logo]"], {group:46});
G.addNodesFrom(["ParameterCall: [Logo]"], {group:47});
G.addNodesFrom(["Arc: [Flowchart]","Node: [Flowchart]"], {group:48});
G.addNodesFrom(["Flowchart: [Flowchart]"], {group:49});
G.addNodesFrom(["Subflow: [Flowchart]"], {group:50});
G.addNodesFrom(["Action: [Flowchart]"], {group:51});
G.addNodesFrom(["Decision: [Flowchart]"], {group:52});

G.addEdgesFrom([["StateMachine: [FSM]","AbstractState: [FSM]"],["StateMachine: [FSM]","Transition: [FSM]"],["AbstractState: [FSM]","Transition: [FSM]"],["AbstractState: [FSM]","Transition: [FSM]"],["State: [FSM]","Program: [FSM]"],["State: [FSM]","Program: [FSM]"],["State: [FSM]","Program: [FSM]"],["Transition: [FSM]","Trigger: [FSM]"],["Transition: [FSM]","AbstractState: [FSM]"],["Transition: [FSM]","AbstractState: [FSM]"],["Transition: [FSM]","Statement: [FSM]"],["Transition: [FSM]","Constraint: [FSM, Flowchart]"],["Pseudostate: [FSM]","PseudostateKind: [FSM]"],["Program: [FSM]","Statement: [FSM]"],["Conditional: [FSM]","Expression: [FSM, Logo, Flowchart]"],["Conditional: [FSM]","Program: [FSM]"],["Loop: [FSM]","Expression: [FSM, Logo, Flowchart]"],["Loop: [FSM]","Program: [FSM]"],["VarDecl: [FSM]","Expression: [FSM, Logo, Flowchart]"],["Assignation: [FSM]","VarDecl: [FSM]"],["Assignation: [FSM]","Expression: [FSM, Logo, Flowchart]"],["RelationalConstraint: [FSM, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["ArithmeticExpression: [FSM, Logo, Flowchart]","ArithmeticOperator: [FSM, Logo, Flowchart]"],["ArithmeticExpression: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["ArithmeticExpression: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["RelationalExpression: [FSM, Logo, Flowchart]","RelationalOperator: [FSM, Logo, Flowchart]"],["RelationalExpression: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["RelationalExpression: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["LogoProgram: [Logo]","Instruction: [Logo]"],["Back: [Logo]","Expression: [FSM, Logo, Flowchart]"],["Forward: [Logo]","Expression: [FSM, Logo, Flowchart]"],["Left: [Logo]","Expression: [FSM, Logo, Flowchart]"],["Right: [Logo]","Expression: [FSM, Logo, Flowchart]"],["ProcCall: [Logo]","Expression: [FSM, Logo, Flowchart]"],["ProcCall: [Logo]","ProcDeclaration: [Logo]"],["ProcDeclaration: [Logo]","Parameter: [Logo]"],["ProcDeclaration: [Logo]","ProcCall: [Logo]"],["ProcDeclaration: [Logo]","Instruction: [Logo]"],["Block: [Logo]","Instruction: [Logo]"],["If: [Logo]","Block: [Logo]"],["If: [Logo]","Block: [Logo]"],["ControlStructure: [Logo]","Expression: [FSM, Logo, Flowchart]"],["Repeat: [Logo]","Block: [Logo]"],["While: [Logo]","Block: [Logo]"],["ParameterCall: [Logo]","Parameter: [Logo]"],["Flowchart: [Flowchart]","Node: [Flowchart]"],["Flowchart: [Flowchart]","Arc: [Flowchart]"],["Node: [Flowchart]","Arc: [Flowchart]"],["Node: [Flowchart]","Arc: [Flowchart]"],["Arc: [Flowchart]","Node: [Flowchart]"],["Arc: [Flowchart]","Node: [Flowchart]"],["Decision: [Flowchart]","Constraint: [FSM, Flowchart]"],["StateMachine: [FSM]","NamedElement: [FSM]"],["AbstractState: [FSM]","NamedElement: [FSM]"],["State: [FSM]","AbstractState: [FSM]"],["Transition: [FSM]","NamedElement: [FSM]"],["Pseudostate: [FSM]","AbstractState: [FSM]"],["FinalState: [FSM]","State: [FSM]"],["Program: [FSM]","Statement: [FSM]"],["Conditional: [FSM]","Statement: [FSM]"],["Loop: [FSM]","Statement: [FSM]"],["VarDecl: [FSM]","Statement: [FSM]"],["ConsoleOutput: [FSM]","Statement: [FSM]"],["Println: [FSM]","ConsoleOutput: [FSM]"],["Print: [FSM]","ConsoleOutput: [FSM]"],["Assignation: [FSM]","Statement: [FSM]"],["Wait: [FSM]","Statement: [FSM]"],["RelationalConstraint: [FSM, Flowchart]","Constraint: [FSM, Flowchart]"],["VarReference: [FSM, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["Literal: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["IntegerLit: [FSM, Logo, Flowchart]","Literal: [FSM, Logo, Flowchart]"],["StringLit: [FSM, Logo, Flowchart]","Literal: [FSM, Logo, Flowchart]"],["BoolLit: [FSM, Logo, Flowchart]","Literal: [FSM, Logo, Flowchart]"],["ArithmeticExpression: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["RelationalExpression: [FSM, Logo, Flowchart]","Expression: [FSM, Logo, Flowchart]"],["Primitive: [Logo]","Instruction: [Logo]"],["Back: [Logo]","Primitive: [Logo]"],["Forward: [Logo]","Primitive: [Logo]"],["Left: [Logo]","Primitive: [Logo]"],["Right: [Logo]","Primitive: [Logo]"],["PenDown: [Logo]","Primitive: [Logo]"],["PenUp: [Logo]","Primitive: [Logo]"],["Clear: [Logo]","Primitive: [Logo]"],["ProcCall: [Logo]","Expression: [FSM, Logo, Flowchart]"],["ProcDeclaration: [Logo]","Instruction: [Logo]"],["Block: [Logo]","Instruction: [Logo]"],["If: [Logo]","ControlStructure: [Logo]"],["ControlStructure: [Logo]","Instruction: [Logo]"],["Repeat: [Logo]","ControlStructure: [Logo]"],["While: [Logo]","ControlStructure: [Logo]"],["Parameter: [Logo]","Expression: [FSM, Logo, Flowchart]"],["ParameterCall: [Logo]","Expression: [FSM, Logo, Flowchart]"],["Subflow: [Flowchart]","Flowchart: [Flowchart]"],["Subflow: [Flowchart]","Node: [Flowchart]"],["Action: [Flowchart]","Node: [Flowchart]"],["Decision: [Flowchart]","Node: [Flowchart]"]]);
