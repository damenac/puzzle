package CompleteDSL;

import complextriggers.AndTrigger;
import complextriggers.Trigger;
import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import CompleteDSL.TriggerAspectTriggerAspectProperties;
import org.eclipse.emf.common.util.EList;
import puzzle.annotations.processor.OverrideRequiredAspectMethod;

@Aspect(className = Trigger.class)
@SuppressWarnings("all")
public class TriggerAspect {
  @OverrideRequiredAspectMethod
  public static boolean evalTrigger(final Trigger _self, final EList<String> events) {
    CompleteDSL.TriggerAspectTriggerAspectProperties _self_ = CompleteDSL.TriggerAspectTriggerAspectContext.getSelf(_self);
    Object result = null;
    result =_privk3_evalTrigger(_self_, _self,events);
    return (boolean)result;
  }
  
  protected static boolean _privk3_evalTrigger(final TriggerAspectTriggerAspectProperties _self_, final Trigger _self, final EList<String> events) {
    if ((_self instanceof AndTrigger)) {
      AndTrigger andTrigger = ((AndTrigger) _self);
      return andTrigger.evalTrigger(events);
    } else {
      return TriggerAspect._original_evalTrigger(_self, events);
    }
  }
  
  private static Trigger _requiredSuper;
  
  public static boolean _original_evalTrigger(final Trigger _self, final EList<String> events) {
    // Required method *.*
    return false;
  }
}
